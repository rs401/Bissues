@model Bissues.Models.Bissue

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Bissue</h4>
<hr />
<div class="row justify-content-md-center">
    <div class="col-md-10">
        <form asp-action="Edit">
            @Html.AntiForgeryToken()
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <input type="hidden" asp-for="ProjectId" />
            <input type="hidden" asp-for="AppUserId" />
            <input type="hidden" asp-for="CreatedDate" />
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" spellcheck="true" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <textarea rows="10" asp-for="Description" class="form-control" spellcheck="true"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsOpen" /> @Html.DisplayNameFor(model => model.IsOpen)
                </label>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>
<div>
    <button onclick="goBack()" class = "btn btn-dark">Go Back</button>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

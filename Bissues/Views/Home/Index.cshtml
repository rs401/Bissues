@using Westwind.AspNetCore.Markdown
@model Bissues.ViewModels.IndexViewModel
@{
    ViewData["Title"] = "Home Page";
}

    <div class="col-md-10">
        <h1 class="display-4">Welcome to</h1>
        <img src="~/img/logo2.svg" width="50%" height="50%" />
        <p class="mt-3">
            Bissues is a Bug and Issue tracker, developed for a course project 
            at Champlain College.
        </p>
    </div>
    <hr/>
    <div class="container row">
        <div class="col-6">
            <div class="row mt-2">
                <div class="col p-3 mr-2 border">
                    Total Issues: @Model.IssueCount
                </div>
                <div class="col p-3 mr-2 border">
                    Opened Issues: @Model.IssueOpened
                </div>
                <div class="col p-3 mr-2 border">
                    Closed Issues: @Model.IssueClosed
                </div>
            </div>
            <div class="row mt-2">
                <div class="col p-3 mr-2 border">
                    Total Bugs: @Model.BugCount
                </div>
                <div class="col p-3 mr-2 border">
                    Opened Bugs: @Model.BugOpened
                </div>
                <div class="col p-3 mr-2 border">
                    Closed Bugs: @Model.BugClosed
                </div>
            </div>
        </div>
        <div class="col-6">
            <canvas id="statChart" width="400" height="200"></canvas>
        </div>
    </div>
    <hr/>
    <h4>Recent Bissues</h4>
    @foreach (var bissue in Model.Bissues)
    {
        <div class = "card mb-2">
            <a asp-controller="Bissues" asp-action="Details" 
                asp-route-id="@bissue.Id" 
                class = "btn text-left text-decoration-none">
                <div class="card-body">
                    <div class="row">
                        <p class="card-title col"><b>@bissue.Title</b> 
                            @if(bissue.IsOpen)
                            {
                                <span class="badge badge-success">Open</span>
                            }
                            else
                            {
                                <span class="badge badge-danger">Closed</span>
                            }
                        </p>
                        <p class="col text-right">
                            &nbsp;Label: 
                            @if(@bissue.Label == 0)
                            {
                                <span class="badge badge-success">Issue</span>
                            }
                            else
                            {
                                <span class="badge badge-danger">Bug</span>
                            }

                        </p>
                    </div>
                    <p class="card-text">
                        @if(bissue.Description.Length > 130)
                        {
                            @Markdown.ParseHtmlString(bissue.Description
                                .Substring(0, 130))
                        }
                        else
                        {
                            @Markdown.ParseHtmlString(bissue.Description)
                        }
                    </p>
                    <footer>Project: @bissue.Project.Name</footer>
                </div>
            </a>
        </div>
    }

<script>
    window.onload = function(){
        var ctx = $('#statChart');
        Chart.defaults.global.defaultFontColor = '#e7eff6';
        var myChart = new Chart(ctx, {
        type: 'line',
        data: {
            labels: ['Total Issues', 'Opened Issues', 'Closed Issues', 
                'Total Bugs', 'Opened Bugs', 'Closed Bugs'],
            datasets: [{
                label: '# of Bugs/Issues',
                data: [@Model.IssueCount, @Model.IssueOpened,@Model.IssueClosed, 
                    @Model.BugCount, @Model.BugOpened, @Model.BugClosed],
                backgroundColor: [
                    '#adcbe3'
                ],
                borderColor: [
                    '#63ace5'
                ],
                borderWidth: 1,
                pointHitRadius: 10,
                pointRadius: 5,
                pointBackgroundColor: '#63ace5'
            }]
        },
        options: {
            scales: {
                yAxes: [{
                    ticks: {
                        max: (Math.max(@Model.BugCount, @Model.IssueCount) + 5),
                        min: 0,
                        stepSize: 2
                    }
                }]
            },
            responsive: true,
            legend: {
                labels: {
                    // This more specific font property overrides the global 
                    fontColor: '#e7eff6'
                }
            }
        }
        });

    };
</script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.min.js" 
    integrity="sha512-d9xgZrVZpmmQlfonhQUvTR7lMPtO7NkZMkA0ABN3PHCbKA5nqylQ/yWlFAyY6hYgdF1Qh6nYiuADWwKB4C2WSw==" 
    crossorigin="anonymous"></script>

